How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It helped some, but was still a little difficult to see

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can see what changes occurred over time when determining what test changes
	need to be made, or to isolate causes of errors.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pro: you can decide to commit only at well defined stopping points.
	Con: you can get lazy and wait too long to commit

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Google Docs is not geared towards programming.
	
How can you use the commands git log and git diff to view the history of files?

    git log provides a brief summary of the file sets that changed.
	git diff provides the differences between 2 individual commits
	
How might using version control make you more confident to make changes that
could break something?

    Being able to checkout previous commits reduces the risk of making changes
	and then not being able to identify where bugs were introduced.

Now that you have your workspace set up, what do you want to try using Git for?

   Obviously for maintaining version history of all my programming projects
